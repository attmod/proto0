<application>
    <name>02 iCub system1</name>

<!--  micro_orientation -->

    <module>
        <name>micro_orientation</name>
        <parameters></parameters>
        <node>localhost</node>
        <dependencies>
            <port timeout="20">/icubSim/cam/left/rgbImage:o</port>
        </dependencies>
    </module>

    <module>
        <name>xterm</name>
        <parameters>-bg black -fg white -T "micro_orientation" -e "yarp read /read /micro_orientation/out"</parameters>
        <node>localhost</node>
        <dependencies>
            <port timeout="20">/micro_orientation/out</port>
        </dependencies>
    </module>

    <connection>
        <from>/icubSim/cam/left/rgbImage:o</from>
        <to>/micro_orientation/in</to>
        <protocol>udp</protocol>
        <geometry>(Pos ((x -1) (y -1)) ((x 86) (y -48)) ((x -79) (y 16))  )</geometry>
    </connection>

<!-- micro_gaze -->

<module>
    <name>micro_gaze</name>
    <parameters></parameters>
    <node>localhost</node>
    <dependencies>
        <port timeout="20">/iKinGazeCtrl/rpc</port>
    </dependencies>
</module>

<module>
    <name>xterm</name>
    <parameters>-bg black -fg white -T "micro_gaze control" -e "yarp write /write/gaze /micro_gaze/in"</parameters>
    <node>localhost</node>
    <dependencies>
        <port timeout="20">/micro_gaze/in</port>
    </dependencies>
</module>

<module>
    <name>yarpscope</name>
    <parameters>--remote /micro_gaze/out --index "(0,1,2)"</parameters>
    <node>localhost</node>
    <dependencies>
        <port timeout="20">/micro_gaze/out</port>
    </dependencies>
</module>

<!-- micro_segment -->

<module>
    <name>micro_segment</name>
    <parameters></parameters>
    <node>localhost</node>
    <dependencies>
        <port timeout="20">/icubSim/cam/left/depthImage:o</port>
    </dependencies>
</module>

<!-- colors -->

<module>
    <name>image_colors</name>
    <parameters>--color blue</parameters>
    <node>localhost</node>
    <dependencies>
        <port timeout="20">/icubSim/cam/left/rgbImage:o</port>
    </dependencies>
</module>

    <connection>
        <from>/icubSim/cam/left/rgbImage:o</from>
        <to>/image_colors/in</to>
        <protocol>udp</protocol>
        <geometry>(Pos ((x -1) (y -1)) ((x 86) (y -48)) ((x -79) (y 16))  )</geometry>
    </connection>

    <module>
        <name>yarpview</name>
        <parameters>--p 33 --x 700 --y 0 --out /disp/image_colors/out</parameters>
        <node>localhost</node>
        <prefix>/disp/image_colors</prefix>
        <geometry>(Pos (x 953.073) (y 401.873))</geometry>
    </module>
    
    <connection>
        <from>/image_colors/out</from>
        <to>/disp/image_colors/yarpview/img:i</to>
        <protocol>tcp</protocol>
        <geometry>(Pos ((x -1) (y -1)) ((x 86) (y -48)) ((x -79) (y 16))  )</geometry>
    </connection>

    <module>
        <name>xterm</name>
        <parameters>-bg black -fg white -T "image_color rpc " -e "yarp rpc /image_colors/rpc"</parameters>
        <node>localhost</node>
        <dependencies>
            <port timeout="20">/image_colors/rpc</port>
        </dependencies>
    </module>

<!-- blob -->

<module>
    <name>image_blob</name>
    <parameters></parameters>
    <node>localhost</node>
</module>

    <connection>
        <from>/image_colors/out</from>
        <to>/image_blob/in</to>
        <protocol>tcp</protocol>
        <geometry>(Pos ((x -1) (y -1)) ((x 86) (y -48)) ((x -79) (y 16))  )</geometry>
    </connection>

    <module>
        <name>yarpview</name>
        <parameters>--p 33 --x 700 --y 0 --out /disp/image_blob/out</parameters>
        <node>localhost</node>
        <prefix>/disp/image_blob</prefix>
        <geometry>(Pos (x 953.073) (y 401.873))</geometry>
    </module>
    
    <connection>
        <from>/image_blob/blur</from>
        <to>/disp/image_blob/yarpview/img:i</to>
        <protocol>tcp</protocol>
        <geometry>(Pos ((x -1) (y -1)) ((x 86) (y -48)) ((x -79) (y 16))  )</geometry>
    </connection>

    <module>
        <name>xterm</name>
        <parameters>-bg black -fg white -T "image_blob rpc" -e "yarp rpc /image_blob/rpc"</parameters>
        <node>localhost</node>
        <dependencies>
            <port timeout="20">/image_blob/rpc</port>
        </dependencies>
    </module>

    <module>
        <name>xterm</name>
        <parameters>-bg black -fg white -T "image_blob out" -e "yarp read /read/image_blob/out /image_blob/out"</parameters>
        <node>localhost</node>
        <dependencies>
            <port timeout="20">/image_blob/out</port>
        </dependencies>
    </module>

<!-- gazebo teleporter -->

    <module>
        <name>xterm</name>
        <parameters>-bg black -fg white -T "gazebo teleporter: bekkering" -e "yarp write /write/bekkering /bekkering/model-mover/delta-pose:i"</parameters>
        <node>localhost</node>
        <dependencies>
            <port timeout="20">/bekkering/model-mover/delta-pose:i</port>
        </dependencies>
    </module>


</application>
